diff -uPr projectmorig/MilkdropPresetFactory/Parser.cpp projectm/MilkdropPresetFactory/Parser.cpp
--- projectmorig/MilkdropPresetFactory/Parser.cpp	2009-12-01 07:38:42.000000000 +0100
+++ projectm/MilkdropPresetFactory/Parser.cpp	2015-11-05 16:58:50.000000000 +0100
@@ -1405,8 +1405,6 @@
   PerFrameEqn * per_frame_eqn;
   GenExpr * gen_expr;
 
-  if (fs == NULL)
-    return NULL;
   if (param_string == NULL)
     return NULL;
   if (preset == NULL)
@@ -1560,8 +1558,6 @@
 
   if (preset == NULL)
     return NULL;
-  if (fs == NULL)
-    return NULL;
 
   if ((token = parseToken(fs, name)) != tEq)
     return NULL;
@@ -1874,8 +1870,6 @@
   /* Null argument checks */
   if (preset == NULL)
     return PROJECTM_FAILURE;
-  if (fs == NULL)
-    return PROJECTM_FAILURE;
   if (token == NULL)
     return PROJECTM_FAILURE;
 
@@ -2165,8 +2159,6 @@
 
   if (token == NULL)
     return PROJECTM_FAILURE;
-  if (fs == NULL)
-    return PROJECTM_FAILURE;
   if (preset == NULL)
     return PROJECTM_FAILURE;
 
@@ -2347,8 +2339,6 @@
   if (token == NULL)
 
     return PROJECTM_FAILURE;
-  if (fs == NULL)
-    return PROJECTM_FAILURE;
   if (preset == NULL)
     return PROJECTM_FAILURE;
 
diff -uPr projectmorig/Renderer/MilkdropWaveform.cpp projectm/Renderer/MilkdropWaveform.cpp
--- projectmorig/Renderer/MilkdropWaveform.cpp	2009-12-01 07:38:42.000000000 +0100
+++ projectm/Renderer/MilkdropWaveform.cpp	2015-11-05 16:43:31.000000000 +0100
@@ -13,7 +13,7 @@
 #include "glew.h"
 #endif
 #ifdef __APPLE__
-#include <GL/gl.h>
+#include <OpenGL/gl.h>
 #endif
 
 #include "MilkdropWaveform.hpp"
diff -uPr projectmorig/Renderer/PerPixelMesh.cpp projectm/Renderer/PerPixelMesh.cpp
--- projectmorig/Renderer/PerPixelMesh.cpp	2009-12-01 07:38:42.000000000 +0100
+++ projectm/Renderer/PerPixelMesh.cpp	2015-11-05 16:50:20.000000000 +0100
@@ -5,8 +5,8 @@
 #include "omptl/omptl_algorithm"
 
 PerPixelMesh::PerPixelMesh(int width, int height) : width(width), height(height), size (width * height),
-		p(width * height, Point(0,0)),
-		p_original(width * height, Point(0,0)),
+		p(width * height, PPPoint(0,0)),
+		p_original(width * height, PPPoint(0,0)),
 		identity(width * height, PerPixelContext(0,0,0,0,0,0))
 		{
 		for (int j=0;j<height;j++)
@@ -42,7 +42,7 @@
 	omptl::copy(p_original.begin(), p_original.end(), p.begin());
 }
 
-Point::Point(float x, float y)
+PPPoint::PPPoint(float x, float y)
 	: x(x), y(y) {}
 PerPixelContext::PerPixelContext(float x, float y, float rad, float theta, int i, int j)
 	: x(x), y(y), rad(rad), theta(theta), i(i), j(j) {}
diff -uPr projectmorig/Renderer/PerPixelMesh.hpp projectm/Renderer/PerPixelMesh.hpp
--- projectmorig/Renderer/PerPixelMesh.hpp	2009-12-01 07:38:42.000000000 +0100
+++ projectm/Renderer/PerPixelMesh.hpp	2015-11-05 16:51:03.000000000 +0100
@@ -3,12 +3,13 @@
 
 #include <vector>
 
-struct Point
+
+struct PPPoint
 {
 	float x;
 	float y;
 
-	Point(float x, float y);
+	PPPoint(float x, float y);
 };
 
 struct PerPixelContext
@@ -31,8 +32,8 @@
 	int height;
 	int size;
 
-	std::vector<Point> p;
-	std::vector<Point> p_original;
+	std::vector<PPPoint> p;
+	std::vector<PPPoint> p_original;
 	std::vector<PerPixelContext> identity;
 
 	PerPixelMesh(int width, int height);
diff -uPr projectmorig/Renderer/Pipeline.cpp projectm/Renderer/Pipeline.cpp
--- projectmorig/Renderer/Pipeline.cpp	2009-12-01 07:38:42.000000000 +0100
+++ projectm/Renderer/Pipeline.cpp	2015-11-05 16:51:21.000000000 +0100
@@ -45,5 +45,5 @@
 }
 
 //void Pipeline::Render(const BeatDetect &music, const PipelineContext &context){}
-Point Pipeline::PerPixel(Point p, const PerPixelContext context)
+PPPoint Pipeline::PerPixel(PPPoint p, const PerPixelContext context)
 {return p;}
diff -uPr projectmorig/Renderer/Pipeline.hpp projectm/Renderer/Pipeline.hpp
--- projectmorig/Renderer/Pipeline.hpp	2009-12-01 07:38:42.000000000 +0100
+++ projectm/Renderer/Pipeline.hpp	2015-11-05 16:51:16.000000000 +0100
@@ -50,7 +50,7 @@
 	 Pipeline();
 	 void setStaticPerPixel(int gx, int gy);
 	 virtual ~Pipeline();
-	 virtual Point PerPixel(Point p, const PerPixelContext context);
+	 virtual PPPoint PerPixel(PPPoint p, const PerPixelContext context);
 };
 
 #endif
diff -uPr projectmorig/Renderer/Renderer.hpp projectm/Renderer/Renderer.hpp
--- projectmorig/Renderer/Renderer.hpp	2009-12-01 07:38:42.000000000 +0100
+++ projectm/Renderer/Renderer.hpp	2015-11-05 16:51:53.000000000 +0100
@@ -124,7 +124,7 @@
   void Pass2 (const Pipeline &pipeline, const PipelineContext &pipelineContext);
   void CompositeOutput(const Pipeline &pipeline, const PipelineContext &pipelineContext);
 
-  inline static Point PerPixel(Point p, PerPixelContext &context)
+  inline static PPPoint PerPixel(PPPoint p, PerPixelContext &context)
   {
 	  return currentPipe->PerPixel(p,context);
   }
diff -uPr projectmorig/Renderer/TextureManager.cpp projectm/Renderer/TextureManager.cpp
--- projectmorig/Renderer/TextureManager.cpp	2009-12-01 07:38:42.000000000 +0100
+++ projectm/Renderer/TextureManager.cpp	2015-11-05 16:52:55.000000000 +0100
@@ -5,7 +5,7 @@
 #include "glew.h"
 #endif
 #ifdef __APPLE__
-#include <GL/gl.h>
+#include <OpenGL/gl.h>
 #endif
 
 #ifdef USE_DEVIL
diff -uPr projectmorig/Renderer/Transformation.hpp projectm/Renderer/Transformation.hpp
--- projectmorig/Renderer/Transformation.hpp	2009-12-01 07:38:42.000000000 +0100
+++ projectm/Renderer/Transformation.hpp	2015-11-05 16:49:09.000000000 +0100
@@ -9,7 +9,7 @@
 {
 public:
 
-	inline static void Zoom(Point &p, const PerPixelContext &context, float zoom, float zoomExponent)
+	inline static void Zoom(PPPoint &p, const PerPixelContext &context, float zoom, float zoomExponent)
 	{
 		float fZoom2 = powf( zoom, powf( zoomExponent, context.rad*2.0f - 1.0f));
 		float fZoom2Inv = 1.0f/fZoom2;
@@ -21,19 +21,19 @@
 		p.y += 0.5;
 	}
 
-	inline static void Transform(Point &p, const PerPixelContext &context, float dx, float dy)
+	inline static void Transform(PPPoint &p, const PerPixelContext &context, float dx, float dy)
 	{
 		p.x -= dx;
 		p.y -= dy;
 	}
 
-	inline static void Scale(Point &p, const PerPixelContext &context, float sy, float sx, float cx, float cy)
+	inline static void Scale(PPPoint &p, const PerPixelContext &context, float sy, float sx, float cx, float cy)
 	{
 		p.x = (p.x - cx)/sx + cx;
 		p.y = (p.y - cy)/sy + cy;
 	}
 
-	inline static void Rotate(Point &p, const PerPixelContext &context, float angle, float cx, float cy)
+	inline static void Rotate(PPPoint &p, const PerPixelContext &context, float angle, float cx, float cy)
 	{
 		float u2 = p.x - cx;
 		float v2 = p.y - cy;
@@ -45,7 +45,7 @@
 		p.y = u2*sin_rot + v2*cos_rot + cy;
 	}
 
-	inline static void Warp(Point &p, const PerPixelContext &context, float time, float speed, float scale, float warp)
+	inline static void Warp(PPPoint &p, const PerPixelContext &context, float time, float speed, float scale, float warp)
 	{
 		float fWarpTime = time * speed;
 		float fWarpScaleInv = 1.0f / scale;
diff -uPr projectmorig/Renderer/VideoEcho.cpp projectm/Renderer/VideoEcho.cpp
--- projectmorig/Renderer/VideoEcho.cpp	2009-12-01 07:38:42.000000000 +0100
+++ projectm/Renderer/VideoEcho.cpp	2015-11-05 16:55:19.000000000 +0100
@@ -74,10 +74,10 @@
 			default: flipx=1;flipy=1; break;
 		}
 
-		float pointsFlip[4][2] = {{-0.5*flipx, -0.5*flipy},
-					  {-0.5*flipx,  0.5*flipy},
-					  { 0.5*flipx,  0.5*flipy},
-					  { 0.5*flipx, -0.5*flipy}};
+		float pointsFlip[4][2] = {{-0.5f*flipx, -0.5f*flipy},
+					  {-0.5f*flipx,  0.5f*flipy},
+					  { 0.5f*flipx,  0.5f*flipy},
+					  { 0.5f*flipx, -0.5f*flipy}};
 
 		glVertexPointer(2,GL_FLOAT,0,pointsFlip);
 		glDrawArrays(GL_TRIANGLE_FAN,0,4);
diff -uPr projectmorig/Renderer/Waveform.cpp projectm/Renderer/Waveform.cpp
--- projectmorig/Renderer/Waveform.cpp	2009-12-01 07:38:42.000000000 +0100
+++ projectm/Renderer/Waveform.cpp	2015-11-05 16:52:40.000000000 +0100
@@ -12,7 +12,7 @@
 #include "glew.h"
 #endif
 #ifdef __APPLE__
-#include <GL/gl.h>
+#include <OpenGL/gl.h>
 #endif
 
 #include "Waveform.hpp"
diff -uPr projectmorig/TimeKeeper.cpp projectm/TimeKeeper.cpp
--- projectmorig/TimeKeeper.cpp	2009-12-01 07:38:42.000000000 +0100
+++ projectm/TimeKeeper.cpp	2015-11-05 16:59:22.000000000 +0100
@@ -11,7 +11,7 @@
 #endif
 
 #ifdef __APPLE__
-#include <GL/gl.h>
+#include <OpenGL/gl.h>
 #endif
 
 #include "TimeKeeper.hpp"
