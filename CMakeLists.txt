PROJECT(visualization.projectm)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

include(AddonVersion.cmake)
addon_version(visualization.projectm PM)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR})

OPTION(PACKAGE_ZIP "Package Zip file?" OFF)

FIND_PATH(XBMC_INCLUDE_DIR xbmc/xbmc_addon_dll.h)
FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(GLEW REQUIRED)
ADD_DEFINITIONS(-DHAS_SDL_OPENGL)
INCLUDE_DIRECTORIES(${OpenGL_INCLUDE_DIR}
                    ${GLEW_INCLUDE_DIR}
                    ${XBMC_INCLUDE_DIR})

SET(DEPLIBS ${OPENGL_LIBRARIES}
            ${GLEW_LIBRARIES})

SET(SOURCES src/Main.cpp)
ADD_LIBRARY(projectm ${SOURCES})

FIND_PACKAGE(ProjectM)
IF (PROJECTM_FOUND)
  SET(DEPLIBS ${DEPLIBS} ${PROJECTM_LIBRARY})
  INCLUDE_DIRECTORIES(${PROJECTM_INCLUDE_DIR})
ELSE(PROJECTM_FOUND)
  MESSAGE(STATUS "Building internal libprojectM")
  ADD_SUBDIRECTORY(lib/libprojectM EXCLUDE_FROM_ALL)
  ADD_DEPENDENCIES(projectm projectM)
  INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/lib/libprojectM)
  SET(DEPLIBS ${DEPLIBS} projectM)
ENDIF(PROJECTM_FOUND)
TARGET_LINK_LIBRARIES(projectm ${DEPLIBS})
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "-s")
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "-s")
SET_TARGET_PROPERTIES(projectm PROPERTIES VERSION ${PM_VERSION}
                                          SOVERSION 13.0
                                          PREFIX "")

IF(PACKAGE_ZIP)
  # Pack files together to create an archive
  INSTALL(DIRECTORY ${PROJECT_NAME} DESTINATION ./)
  INSTALL(TARGETS projectm DESTINATION visualization.projectm)
  SET(CPACK_GENERATOR "ZIP")
  SET(CPACK_INCLUDE_TOPLEVEL_DIRECTORY OFF)
  SET(CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${PM_VERSION})
  INCLUDE(CPack)
ELSE(PACKAGE_ZIP)
  INSTALL(TARGETS projectm DESTINATION lib/xbmc/addons/visualization.projectm)
  INSTALL(DIRECTORY visualization.projectm DESTINATION share/xbmc/addons)
ENDIF(PACKAGE_ZIP)
